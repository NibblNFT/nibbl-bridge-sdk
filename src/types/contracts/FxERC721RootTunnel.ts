/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface FxERC721RootTunnelInterface extends utils.Interface {
  functions: {
    "DEPOSIT()": FunctionFragment;
    "MAP_TOKEN()": FunctionFragment;
    "SEND_MESSAGE_EVENT_SIG()": FunctionFragment;
    "checkpointManager()": FunctionFragment;
    "childTokenTemplateCodeHash()": FunctionFragment;
    "computedCreate2Address(bytes32,bytes32,address)": FunctionFragment;
    "deposit(address,address,uint256,string,bytes)": FunctionFragment;
    "fxChildTunnel()": FunctionFragment;
    "fxRoot()": FunctionFragment;
    "mapToken(address)": FunctionFragment;
    "onERC721Received(address,address,uint256,bytes)": FunctionFragment;
    "processedExits(bytes32)": FunctionFragment;
    "receiveMessage(bytes)": FunctionFragment;
    "rootToChildTokens(address)": FunctionFragment;
    "setFxChildTunnel(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "DEPOSIT"
      | "MAP_TOKEN"
      | "SEND_MESSAGE_EVENT_SIG"
      | "checkpointManager"
      | "childTokenTemplateCodeHash"
      | "computedCreate2Address"
      | "deposit"
      | "fxChildTunnel"
      | "fxRoot"
      | "mapToken"
      | "onERC721Received"
      | "processedExits"
      | "receiveMessage"
      | "rootToChildTokens"
      | "setFxChildTunnel"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "DEPOSIT", values?: undefined): string;
  encodeFunctionData(functionFragment: "MAP_TOKEN", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "SEND_MESSAGE_EVENT_SIG",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "checkpointManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "childTokenTemplateCodeHash",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "computedCreate2Address",
    values: [
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "deposit",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fxChildTunnel",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "fxRoot", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "mapToken",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC721Received",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "processedExits",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "receiveMessage",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "rootToChildTokens",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFxChildTunnel",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: "DEPOSIT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "MAP_TOKEN", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "SEND_MESSAGE_EVENT_SIG",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkpointManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "childTokenTemplateCodeHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "computedCreate2Address",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "fxChildTunnel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "fxRoot", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mapToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "onERC721Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "processedExits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "receiveMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rootToChildTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFxChildTunnel",
    data: BytesLike
  ): Result;

  events: {
    "FxDepositERC721(address,address,address,uint256)": EventFragment;
    "FxWithdrawERC721(address,address,address,uint256)": EventFragment;
    "TokenMappedERC721(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "FxDepositERC721"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FxWithdrawERC721"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenMappedERC721"): EventFragment;
}

export interface FxDepositERC721EventObject {
  rootToken: string;
  depositor: string;
  userAddress: string;
  id: BigNumber;
}
export type FxDepositERC721Event = TypedEvent<
  [string, string, string, BigNumber],
  FxDepositERC721EventObject
>;

export type FxDepositERC721EventFilter = TypedEventFilter<FxDepositERC721Event>;

export interface FxWithdrawERC721EventObject {
  rootToken: string;
  childToken: string;
  userAddress: string;
  id: BigNumber;
}
export type FxWithdrawERC721Event = TypedEvent<
  [string, string, string, BigNumber],
  FxWithdrawERC721EventObject
>;

export type FxWithdrawERC721EventFilter =
  TypedEventFilter<FxWithdrawERC721Event>;

export interface TokenMappedERC721EventObject {
  rootToken: string;
  childToken: string;
}
export type TokenMappedERC721Event = TypedEvent<
  [string, string],
  TokenMappedERC721EventObject
>;

export type TokenMappedERC721EventFilter =
  TypedEventFilter<TokenMappedERC721Event>;

export interface FxERC721RootTunnel extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: FxERC721RootTunnelInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DEPOSIT(overrides?: CallOverrides): Promise<[string]>;

    MAP_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    SEND_MESSAGE_EVENT_SIG(overrides?: CallOverrides): Promise<[string]>;

    checkpointManager(overrides?: CallOverrides): Promise<[string]>;

    childTokenTemplateCodeHash(overrides?: CallOverrides): Promise<[string]>;

    computedCreate2Address(
      salt: PromiseOrValue<BytesLike>,
      bytecodeHash: PromiseOrValue<BytesLike>,
      deployer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    deposit(
      rootToken: PromiseOrValue<string>,
      user: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      tokenURI: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    fxChildTunnel(overrides?: CallOverrides): Promise<[string]>;

    fxRoot(overrides?: CallOverrides): Promise<[string]>;

    mapToken(
      rootToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    processedExits(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    receiveMessage(
      inputData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    rootToChildTokens(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    setFxChildTunnel(
      _fxChildTunnel: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  DEPOSIT(overrides?: CallOverrides): Promise<string>;

  MAP_TOKEN(overrides?: CallOverrides): Promise<string>;

  SEND_MESSAGE_EVENT_SIG(overrides?: CallOverrides): Promise<string>;

  checkpointManager(overrides?: CallOverrides): Promise<string>;

  childTokenTemplateCodeHash(overrides?: CallOverrides): Promise<string>;

  computedCreate2Address(
    salt: PromiseOrValue<BytesLike>,
    bytecodeHash: PromiseOrValue<BytesLike>,
    deployer: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  deposit(
    rootToken: PromiseOrValue<string>,
    user: PromiseOrValue<string>,
    tokenId: PromiseOrValue<BigNumberish>,
    tokenURI: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  fxChildTunnel(overrides?: CallOverrides): Promise<string>;

  fxRoot(overrides?: CallOverrides): Promise<string>;

  mapToken(
    rootToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  onERC721Received(
    arg0: PromiseOrValue<string>,
    arg1: PromiseOrValue<string>,
    arg2: PromiseOrValue<BigNumberish>,
    arg3: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<string>;

  processedExits(
    arg0: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  receiveMessage(
    inputData: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  rootToChildTokens(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  setFxChildTunnel(
    _fxChildTunnel: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    DEPOSIT(overrides?: CallOverrides): Promise<string>;

    MAP_TOKEN(overrides?: CallOverrides): Promise<string>;

    SEND_MESSAGE_EVENT_SIG(overrides?: CallOverrides): Promise<string>;

    checkpointManager(overrides?: CallOverrides): Promise<string>;

    childTokenTemplateCodeHash(overrides?: CallOverrides): Promise<string>;

    computedCreate2Address(
      salt: PromiseOrValue<BytesLike>,
      bytecodeHash: PromiseOrValue<BytesLike>,
      deployer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    deposit(
      rootToken: PromiseOrValue<string>,
      user: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      tokenURI: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    fxChildTunnel(overrides?: CallOverrides): Promise<string>;

    fxRoot(overrides?: CallOverrides): Promise<string>;

    mapToken(
      rootToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    processedExits(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    receiveMessage(
      inputData: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    rootToChildTokens(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    setFxChildTunnel(
      _fxChildTunnel: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "FxDepositERC721(address,address,address,uint256)"(
      rootToken?: PromiseOrValue<string> | null,
      depositor?: PromiseOrValue<string> | null,
      userAddress?: PromiseOrValue<string> | null,
      id?: null
    ): FxDepositERC721EventFilter;
    FxDepositERC721(
      rootToken?: PromiseOrValue<string> | null,
      depositor?: PromiseOrValue<string> | null,
      userAddress?: PromiseOrValue<string> | null,
      id?: null
    ): FxDepositERC721EventFilter;

    "FxWithdrawERC721(address,address,address,uint256)"(
      rootToken?: PromiseOrValue<string> | null,
      childToken?: PromiseOrValue<string> | null,
      userAddress?: PromiseOrValue<string> | null,
      id?: null
    ): FxWithdrawERC721EventFilter;
    FxWithdrawERC721(
      rootToken?: PromiseOrValue<string> | null,
      childToken?: PromiseOrValue<string> | null,
      userAddress?: PromiseOrValue<string> | null,
      id?: null
    ): FxWithdrawERC721EventFilter;

    "TokenMappedERC721(address,address)"(
      rootToken?: PromiseOrValue<string> | null,
      childToken?: PromiseOrValue<string> | null
    ): TokenMappedERC721EventFilter;
    TokenMappedERC721(
      rootToken?: PromiseOrValue<string> | null,
      childToken?: PromiseOrValue<string> | null
    ): TokenMappedERC721EventFilter;
  };

  estimateGas: {
    DEPOSIT(overrides?: CallOverrides): Promise<BigNumber>;

    MAP_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    SEND_MESSAGE_EVENT_SIG(overrides?: CallOverrides): Promise<BigNumber>;

    checkpointManager(overrides?: CallOverrides): Promise<BigNumber>;

    childTokenTemplateCodeHash(overrides?: CallOverrides): Promise<BigNumber>;

    computedCreate2Address(
      salt: PromiseOrValue<BytesLike>,
      bytecodeHash: PromiseOrValue<BytesLike>,
      deployer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deposit(
      rootToken: PromiseOrValue<string>,
      user: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      tokenURI: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    fxChildTunnel(overrides?: CallOverrides): Promise<BigNumber>;

    fxRoot(overrides?: CallOverrides): Promise<BigNumber>;

    mapToken(
      rootToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    processedExits(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    receiveMessage(
      inputData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    rootToChildTokens(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setFxChildTunnel(
      _fxChildTunnel: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DEPOSIT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MAP_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    SEND_MESSAGE_EVENT_SIG(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkpointManager(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    childTokenTemplateCodeHash(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    computedCreate2Address(
      salt: PromiseOrValue<BytesLike>,
      bytecodeHash: PromiseOrValue<BytesLike>,
      deployer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deposit(
      rootToken: PromiseOrValue<string>,
      user: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      tokenURI: PromiseOrValue<string>,
      data: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    fxChildTunnel(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    fxRoot(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mapToken(
      rootToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    onERC721Received(
      arg0: PromiseOrValue<string>,
      arg1: PromiseOrValue<string>,
      arg2: PromiseOrValue<BigNumberish>,
      arg3: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    processedExits(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    receiveMessage(
      inputData: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    rootToChildTokens(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setFxChildTunnel(
      _fxChildTunnel: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
