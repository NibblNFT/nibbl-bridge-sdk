/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  IChildTunnel,
  IChildTunnelInterface,
} from "../../../contracts/Interfaces/IChildTunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "childToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102f9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063920f96cc14610030575b600080fd5b61004a60048036038101906100459190610240565b61004c565b005b50505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009182610066565b9050919050565b6100a181610086565b81146100ac57600080fd5b50565b6000813590506100be81610098565b92915050565b6000819050919050565b6100d7816100c4565b81146100e257600080fd5b50565b6000813590506100f4816100ce565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61014d82610104565b810181811067ffffffffffffffff8211171561016c5761016b610115565b5b80604052505050565b600061017f610052565b905061018b8282610144565b919050565b600067ffffffffffffffff8211156101ab576101aa610115565b5b6101b482610104565b9050602081019050919050565b82818337600083830152505050565b60006101e36101de84610190565b610175565b9050828152602081018484840111156101ff576101fe6100ff565b5b61020a8482856101c1565b509392505050565b600082601f830112610227576102266100fa565b5b81356102378482602086016101d0565b91505092915050565b6000806000806080858703121561025a5761025961005c565b5b6000610268878288016100af565b9450506020610279878288016100af565b935050604061028a878288016100e5565b925050606085013567ffffffffffffffff8111156102ab576102aa610061565b5b6102b787828801610212565b9150509295919450925056fea26469706673582212209daf0340c68c7469e227655131b46611ef0f35c6850faaee580f10ae7be8ab2d64736f6c63430008110033";

type IChildTunnelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IChildTunnelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IChildTunnel__factory extends ContractFactory {
  constructor(...args: IChildTunnelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IChildTunnel> {
    return super.deploy(overrides || {}) as Promise<IChildTunnel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IChildTunnel {
    return super.attach(address) as IChildTunnel;
  }
  override connect(signer: Signer): IChildTunnel__factory {
    return super.connect(signer) as IChildTunnel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IChildTunnelInterface {
    return new utils.Interface(_abi) as IChildTunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IChildTunnel {
    return new Contract(address, _abi, signerOrProvider) as IChildTunnel;
  }
}
