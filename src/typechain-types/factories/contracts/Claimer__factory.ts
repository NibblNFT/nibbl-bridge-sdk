/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Claimer, ClaimerInterface } from "../../contracts/Claimer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105fc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636c19408a14610046578063bc197c8114610062578063f23a6e6114610092575b600080fd5b610060600480360381019061005b9190610205565b6100c2565b005b61007c60048036038101906100779190610327565b610139565b604051610089919061043e565b60405180910390f35b6100ac60048036038101906100a79190610459565b610151565b6040516100b9919061043e565b60405180910390f35b8373ffffffffffffffffffffffffffffffffffffffff1663f242432a308486856040518563ffffffff1660e01b8152600401610101949392919061056e565b600060405180830381600087803b15801561011b57600080fd5b505af115801561012f573d6000803e3d6000fd5b5050505050505050565b600063bc197c8160e01b905098975050505050505050565b600063f23a6e6160e01b90509695505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019c82610171565b9050919050565b6101ac81610191565b81146101b757600080fd5b50565b6000813590506101c9816101a3565b92915050565b6000819050919050565b6101e2816101cf565b81146101ed57600080fd5b50565b6000813590506101ff816101d9565b92915050565b6000806000806080858703121561021f5761021e610167565b5b600061022d878288016101ba565b945050602061023e878288016101f0565b935050604061024f878288016101ba565b9250506060610260878288016101f0565b91505092959194509250565b600080fd5b600080fd5b600080fd5b60008083601f8401126102915761029061026c565b5b8235905067ffffffffffffffff8111156102ae576102ad610271565b5b6020830191508360208202830111156102ca576102c9610276565b5b9250929050565b60008083601f8401126102e7576102e661026c565b5b8235905067ffffffffffffffff81111561030457610303610271565b5b6020830191508360018202830111156103205761031f610276565b5b9250929050565b60008060008060008060008060a0898b03121561034757610346610167565b5b60006103558b828c016101ba565b98505060206103668b828c016101ba565b975050604089013567ffffffffffffffff8111156103875761038661016c565b5b6103938b828c0161027b565b9650965050606089013567ffffffffffffffff8111156103b6576103b561016c565b5b6103c28b828c0161027b565b9450945050608089013567ffffffffffffffff8111156103e5576103e461016c565b5b6103f18b828c016102d1565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61043881610403565b82525050565b6000602082019050610453600083018461042f565b92915050565b60008060008060008060a0878903121561047657610475610167565b5b600061048489828a016101ba565b965050602061049589828a016101ba565b95505060406104a689828a016101f0565b94505060606104b789828a016101f0565b935050608087013567ffffffffffffffff8111156104d8576104d761016c565b5b6104e489828a016102d1565b92509250509295509295509295565b6104fc81610191565b82525050565b61050b816101cf565b82525050565b600082825260208201905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610558600283610511565b915061056382610522565b602082019050919050565b600060a08201905061058360008301876104f3565b61059060208301866104f3565b61059d6040830185610502565b6105aa6060830184610502565b81810360808301526105bb8161054b565b90509594505050505056fea2646970667358221220cee9dd3601caf1fceb91e150731b5b58be1c24e900969c9aa835df0f058a867d64736f6c63430008110033";

type ClaimerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClaimerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Claimer__factory extends ContractFactory {
  constructor(...args: ClaimerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Claimer> {
    return super.deploy(overrides || {}) as Promise<Claimer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Claimer {
    return super.attach(address) as Claimer;
  }
  override connect(signer: Signer): Claimer__factory {
    return super.connect(signer) as Claimer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClaimerInterface {
    return new utils.Interface(_abi) as ClaimerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Claimer {
    return new Contract(address, _abi, signerOrProvider) as Claimer;
  }
}
