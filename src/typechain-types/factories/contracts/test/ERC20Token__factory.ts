/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/test/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001e2a38038062001e2a8339818101604052810190620000379190620002ba565b8181601282600090816200004c91906200058a565b5081600190816200005e91906200058a565b508060ff1660808160ff16815250504660a08181525050620000856200009760201b60201c565b60c08181525050505050505062000807565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000cb919062000720565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646306040516020016200010c959493929190620007aa565b60405160208183030381529060405280519060200120905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001908262000145565b810181811067ffffffffffffffff82111715620001b257620001b162000156565b5b80604052505050565b6000620001c762000127565b9050620001d5828262000185565b919050565b600067ffffffffffffffff821115620001f857620001f762000156565b5b620002038262000145565b9050602081019050919050565b60005b838110156200023057808201518184015260208101905062000213565b60008484015250505050565b6000620002536200024d84620001da565b620001bb565b90508281526020810184848401111562000272576200027162000140565b5b6200027f84828562000210565b509392505050565b600082601f8301126200029f576200029e6200013b565b5b8151620002b18482602086016200023c565b91505092915050565b60008060408385031215620002d457620002d362000131565b5b600083015167ffffffffffffffff811115620002f557620002f462000136565b5b620003038582860162000287565b925050602083015167ffffffffffffffff81111562000327576200032662000136565b5b620003358582860162000287565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039257607f821691505b602082108103620003a857620003a76200034a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004127fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003d3565b6200041e8683620003d3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200046b620004656200045f8462000436565b62000440565b62000436565b9050919050565b6000819050919050565b62000487836200044a565b6200049f620004968262000472565b848454620003e0565b825550505050565b600090565b620004b6620004a7565b620004c38184846200047c565b505050565b5b81811015620004eb57620004df600082620004ac565b600181019050620004c9565b5050565b601f8211156200053a576200050481620003ae565b6200050f84620003c3565b810160208510156200051f578190505b620005376200052e85620003c3565b830182620004c8565b50505b505050565b600082821c905092915050565b60006200055f600019846008026200053f565b1980831691505092915050565b60006200057a83836200054c565b9150826002028217905092915050565b62000595826200033f565b67ffffffffffffffff811115620005b157620005b062000156565b5b620005bd825462000379565b620005ca828285620004ef565b600060209050601f831160018114620006025760008415620005ed578287015190505b620005f985826200056c565b86555062000669565b601f1984166200061286620003ae565b60005b828110156200063c5784890151825560018201915060208501945060208101905062000615565b868310156200065c578489015162000658601f8916826200054c565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620006a08162000379565b620006ac818662000671565b94506001821660008114620006ca5760018114620006e05762000717565b60ff198316865281151582028601935062000717565b620006eb856200067c565b60005b838110156200070f57815481890152600182019150602081019050620006ee565b838801955050505b50505092915050565b60006200072e828462000691565b915081905092915050565b6000819050919050565b6200074e8162000739565b82525050565b6200075f8162000436565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007928262000765565b9050919050565b620007a48162000785565b82525050565b600060a082019050620007c1600083018862000743565b620007d0602083018762000743565b620007df604083018662000743565b620007ee606083018562000754565b620007fd608083018462000799565b9695505050505050565b60805160a05160c0516115f36200083760003960006106ee015260006106ba0152600061069401526115f36000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b4114610228578063a9059cbb14610246578063d505accf14610276578063dd62ed3e14610292576100cf565b806340c10f19146101ac57806370a08231146101c85780637ecebe00146101f8576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce567146101705780633644e5151461018e575b600080fd5b6100dc6102c2565b6040516100e99190610dfd565b60405180910390f35b61010c60048036038101906101079190610eb8565b610350565b6040516101199190610f13565b60405180910390f35b61012a610442565b6040516101379190610f3d565b60405180910390f35b61015a60048036038101906101559190610f58565b610448565b6040516101679190610f13565b60405180910390f35b610178610692565b6040516101859190610fc7565b60405180910390f35b6101966106b6565b6040516101a39190610ffb565b60405180910390f35b6101c660048036038101906101c19190610eb8565b610713565b005b6101e260048036038101906101dd9190611016565b610721565b6040516101ef9190610f3d565b60405180910390f35b610212600480360381019061020d9190611016565b610739565b60405161021f9190610f3d565b60405180910390f35b610230610751565b60405161023d9190610dfd565b60405180910390f35b610260600480360381019061025b9190610eb8565b6107df565b60405161026d9190610f13565b60405180910390f35b610290600480360381019061028b919061109b565b6108f3565b005b6102ac60048036038101906102a7919061113d565b610bec565b6040516102b99190610f3d565b60405180910390f35b600080546102cf906111ac565b80601f01602080910402602001604051908101604052809291908181526020018280546102fb906111ac565b80156103485780601f1061031d57610100808354040283529160200191610348565b820191906000526020600020905b81548152906001019060200180831161032b57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104309190610f3d565b60405180910390a36001905092915050565b60025481565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461057e5782816104fd919061120c565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105cd919061120c565b9250508190555082600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161067e9190610f3d565b60405180910390a360019150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146106ec576106e7610c11565b61070e565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b61071d8282610c9d565b5050565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461075e906111ac565b80601f016020809104026020016040519081016040528092919081815260200182805461078a906111ac565b80156107d75780601f106107ac576101008083540402835291602001916107d7565b820191906000526020600020905b8154815290600101906020018083116107ba57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610830919061120c565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108e19190610f3d565b60405180910390a36001905092915050565b42841015610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d9061128c565b60405180910390fd5b600060016109426106b6565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98a8a8a600560008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b6040516020016109ca969594939291906112bb565b604051602081830303815290604052805190602001206040516020016109f1929190611394565b6040516020818303038152906040528051906020012085858560405160008152602001604052604051610a2794939291906113cb565b6020604051602081039080840390855afa158015610a49573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610abd57508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af39061145c565b60405180910390fd5b85600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610bdb9190610f3d565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610c43919061151f565b60405180910390207fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc64630604051602001610c82959493929190611536565b60405160208183030381529060405280519060200120905090565b8060026000828254610caf9190611589565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d619190610f3d565b60405180910390a35050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610da7578082015181840152602081019050610d8c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dcf82610d6d565b610dd98185610d78565b9350610de9818560208601610d89565b610df281610db3565b840191505092915050565b60006020820190508181036000830152610e178184610dc4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4f82610e24565b9050919050565b610e5f81610e44565b8114610e6a57600080fd5b50565b600081359050610e7c81610e56565b92915050565b6000819050919050565b610e9581610e82565b8114610ea057600080fd5b50565b600081359050610eb281610e8c565b92915050565b60008060408385031215610ecf57610ece610e1f565b5b6000610edd85828601610e6d565b9250506020610eee85828601610ea3565b9150509250929050565b60008115159050919050565b610f0d81610ef8565b82525050565b6000602082019050610f286000830184610f04565b92915050565b610f3781610e82565b82525050565b6000602082019050610f526000830184610f2e565b92915050565b600080600060608486031215610f7157610f70610e1f565b5b6000610f7f86828701610e6d565b9350506020610f9086828701610e6d565b9250506040610fa186828701610ea3565b9150509250925092565b600060ff82169050919050565b610fc181610fab565b82525050565b6000602082019050610fdc6000830184610fb8565b92915050565b6000819050919050565b610ff581610fe2565b82525050565b60006020820190506110106000830184610fec565b92915050565b60006020828403121561102c5761102b610e1f565b5b600061103a84828501610e6d565b91505092915050565b61104c81610fab565b811461105757600080fd5b50565b60008135905061106981611043565b92915050565b61107881610fe2565b811461108357600080fd5b50565b6000813590506110958161106f565b92915050565b600080600080600080600060e0888a0312156110ba576110b9610e1f565b5b60006110c88a828b01610e6d565b97505060206110d98a828b01610e6d565b96505060406110ea8a828b01610ea3565b95505060606110fb8a828b01610ea3565b945050608061110c8a828b0161105a565b93505060a061111d8a828b01611086565b92505060c061112e8a828b01611086565b91505092959891949750929550565b6000806040838503121561115457611153610e1f565b5b600061116285828601610e6d565b925050602061117385828601610e6d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111c457607f821691505b6020821081036111d7576111d661117d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061121782610e82565b915061122283610e82565b925082820390508181111561123a576112396111dd565b5b92915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b6000611276601783610d78565b915061128182611240565b602082019050919050565b600060208201905081810360008301526112a581611269565b9050919050565b6112b581610e44565b82525050565b600060c0820190506112d06000830189610fec565b6112dd60208301886112ac565b6112ea60408301876112ac565b6112f76060830186610f2e565b6113046080830185610f2e565b61131160a0830184610f2e565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061135d60028361131c565b915061136882611327565b600282019050919050565b6000819050919050565b61138e61138982610fe2565b611373565b82525050565b600061139f82611350565b91506113ab828561137d565b6020820191506113bb828461137d565b6020820191508190509392505050565b60006080820190506113e06000830187610fec565b6113ed6020830186610fb8565b6113fa6040830185610fec565b6114076060830184610fec565b95945050505050565b7f494e56414c49445f5349474e4552000000000000000000000000000000000000600082015250565b6000611446600e83610d78565b915061145182611410565b602082019050919050565b6000602082019050818103600083015261147581611439565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546114a9816111ac565b6114b3818661147c565b945060018216600081146114ce57600181146114e357611516565b60ff1983168652811515820286019350611516565b6114ec85611487565b60005b8381101561150e578154818901526001820191506020810190506114ef565b838801955050505b50505092915050565b600061152b828461149c565b915081905092915050565b600060a08201905061154b6000830188610fec565b6115586020830187610fec565b6115656040830186610fec565b6115726060830185610f2e565b61157f60808301846112ac565b9695505050505050565b600061159482610e82565b915061159f83610e82565b92508282019050808211156115b7576115b66111dd565b5b9291505056fea26469706673582212208b574bbe3c4d5440d08f02da62b8060afc5e5d8430eab6969589e1c0d574b27464736f6c63430008110033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Token> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<ERC20Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  override connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
