/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Claimer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Claimer__factory>;
    getContractFactory(
      name: "FxERC721ChildTunnelTokenURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxERC721ChildTunnelTokenURI__factory>;
    getContractFactory(
      name: "FxERC721RootTunnelTokenURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxERC721RootTunnelTokenURI__factory>;
    getContractFactory(
      name: "FxStateChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxStateChildTunnel__factory>;
    getContractFactory(
      name: "FxStateRootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxStateRootTunnel__factory>;
    getContractFactory(
      name: "FxChild",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxChild__factory>;
    getContractFactory(
      name: "IFxMessageProcessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFxMessageProcessor__factory>;
    getContractFactory(
      name: "IStateReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateReceiver__factory>;
    getContractFactory(
      name: "FxRoot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxRoot__factory>;
    getContractFactory(
      name: "IFxStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFxStateSender__factory>;
    getContractFactory(
      name: "IStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStateSender__factory>;
    getContractFactory(
      name: "IChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChildTunnel__factory>;
    getContractFactory(
      name: "Create2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Create2__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Lock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lock__factory>;
    getContractFactory(
      name: "ERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Token__factory>;
    getContractFactory(
      name: "ERC721Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Token__factory>;
    getContractFactory(
      name: "Nibbles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Nibbles__factory>;
    getContractFactory(
      name: "FxERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxERC721__factory>;
    getContractFactory(
      name: "IFxERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFxERC721__factory>;
    getContractFactory(
      name: "FxBaseChildTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxBaseChildTunnel__factory>;
    getContractFactory(
      name: "IFxMessageProcessor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFxMessageProcessor__factory>;
    getContractFactory(
      name: "FxBaseRootTunnel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FxBaseRootTunnel__factory>;
    getContractFactory(
      name: "ICheckpointManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheckpointManager__factory>;
    getContractFactory(
      name: "IFxStateSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFxStateSender__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721TokenReceiver__factory>;

    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Claimer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Claimer>;
    getContractAt(
      name: "FxERC721ChildTunnelTokenURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxERC721ChildTunnelTokenURI>;
    getContractAt(
      name: "FxERC721RootTunnelTokenURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxERC721RootTunnelTokenURI>;
    getContractAt(
      name: "FxStateChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxStateChildTunnel>;
    getContractAt(
      name: "FxStateRootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxStateRootTunnel>;
    getContractAt(
      name: "FxChild",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxChild>;
    getContractAt(
      name: "IFxMessageProcessor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFxMessageProcessor>;
    getContractAt(
      name: "IStateReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateReceiver>;
    getContractAt(
      name: "FxRoot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxRoot>;
    getContractAt(
      name: "IFxStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFxStateSender>;
    getContractAt(
      name: "IStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStateSender>;
    getContractAt(
      name: "IChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChildTunnel>;
    getContractAt(
      name: "Create2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Create2>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Lock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lock>;
    getContractAt(
      name: "ERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Token>;
    getContractAt(
      name: "ERC721Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Token>;
    getContractAt(
      name: "Nibbles",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Nibbles>;
    getContractAt(
      name: "FxERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxERC721>;
    getContractAt(
      name: "IFxERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFxERC721>;
    getContractAt(
      name: "FxBaseChildTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxBaseChildTunnel>;
    getContractAt(
      name: "IFxMessageProcessor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFxMessageProcessor>;
    getContractAt(
      name: "FxBaseRootTunnel",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FxBaseRootTunnel>;
    getContractAt(
      name: "ICheckpointManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheckpointManager>;
    getContractAt(
      name: "IFxStateSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFxStateSender>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721TokenReceiver>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
